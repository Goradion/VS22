package VS2;


/**
* VS2/_MessageboardServerInterfaceStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from VS2.idl
* Saturday, March 25, 2017 2:41:42 PM CET
*/

public class _MessageboardServerInterfaceStub extends org.omg.CORBA.portable.ObjectImpl implements VS2.MessageboardServerInterface
{

  public String getFatherName ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getFatherName", true);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getFatherName (        );
            } finally {
                _releaseReply ($in);
            }
  } // getFatherName


  //MessageBoard hat fatherId-> abruf xml datei auf fathername
  public String[] getChildNames ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getChildNames", true);
                $in = _invoke ($out);
                String $result[] = VS2.array_of_StringHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getChildNames (        );
            } finally {
                _releaseReply ($in);
            }
  } // getChildNames

  public VS2.MessageData[] getMessages ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getMessages", true);
                $in = _invoke ($out);
                VS2.MessageData $result[] = VS2.array_of_MessageDataHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getMessages (        );
            } finally {
                _releaseReply ($in);
            }
  } // getMessages

  public VS2.MessageData setHighlightedMessage (String messageID)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("setHighlightedMessage", true);
                $out.write_string (messageID);
                $in = _invoke ($out);
                VS2.MessageData $result = VS2.MessageDataHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return setHighlightedMessage (messageID        );
            } finally {
                _releaseReply ($in);
            }
  } // setHighlightedMessage

  public VS2.MessageData getHighlightedMessage ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getHighlightedMessage", true);
                $in = _invoke ($out);
                VS2.MessageData $result = VS2.MessageDataHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getHighlightedMessage (        );
            } finally {
                _releaseReply ($in);
            }
  } // getHighlightedMessage

  public VS2.MessageData getMessageWithId (String messageID)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getMessageWithId", true);
                $out.write_string (messageID);
                $in = _invoke ($out);
                VS2.MessageData $result = VS2.MessageDataHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getMessageWithId (messageID        );
            } finally {
                _releaseReply ($in);
            }
  } // getMessageWithId

  public boolean setMessage (String message, String messageID, VS2.UserData uData)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("setMessage", true);
                $out.write_string (message);
                $out.write_string (messageID);
                VS2.UserDataHelper.write ($out, uData);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return setMessage (message, messageID, uData        );
            } finally {
                _releaseReply ($in);
            }
  } // setMessage

  public boolean deleteMessage (String messageID, VS2.UserData uData)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("deleteMessage", true);
                $out.write_string (messageID);
                VS2.UserDataHelper.write ($out, uData);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return deleteMessage (messageID, uData        );
            } finally {
                _releaseReply ($in);
            }
  } // deleteMessage

  public boolean createNewMessage (String message, VS2.UserData uData)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("createNewMessage", true);
                $out.write_string (message);
                VS2.UserDataHelper.write ($out, uData);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return createNewMessage (message, uData        );
            } finally {
                _releaseReply ($in);
            }
  } // createNewMessage

  public VS2.MessageData getNextMessage ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getNextMessage", true);
                $in = _invoke ($out);
                VS2.MessageData $result = VS2.MessageDataHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getNextMessage (        );
            } finally {
                _releaseReply ($in);
            }
  } // getNextMessage

  public VS2.MessageData getPreviousMessage ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getPreviousMessage", true);
                $in = _invoke ($out);
                VS2.MessageData $result = VS2.MessageDataHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getPreviousMessage (        );
            } finally {
                _releaseReply ($in);
            }
  } // getPreviousMessage

  public VS2.ConnectInformationData connectToFather (VS2.UserData uData)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("connectToFather", true);
                VS2.UserDataHelper.write ($out, uData);
                $in = _invoke ($out);
                VS2.ConnectInformationData $result = VS2.ConnectInformationDataHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return connectToFather (uData        );
            } finally {
                _releaseReply ($in);
            }
  } // connectToFather


  //Liefert die Connectinformationen des Fathers
  public VS2.ConnectInformationData connectToChild (String childName)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("connectToChild", true);
                $out.write_string (childName);
                $in = _invoke ($out);
                VS2.ConnectInformationData $result = VS2.ConnectInformationDataHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return connectToChild (childName        );
            } finally {
                _releaseReply ($in);
            }
  } // connectToChild


  //********** zur Kommunikation zwischen Servern(Spezialfälle, daher notwendig) muss nicht in den Client rein ************************
  public boolean publishOnChilds (String message, String messageID, VS2.UserData uData, boolean schalter)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("publishOnChilds", true);
                $out.write_string (message);
                $out.write_string (messageID);
                VS2.UserDataHelper.write ($out, uData);
                $out.write_boolean (schalter);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return publishOnChilds (message, messageID, uData, schalter        );
            } finally {
                _releaseReply ($in);
            }
  } // publishOnChilds


  //Die Nachricht auf allen Kindern veröffentlichen, extra Schalter um auf allen Kindes Kindern zu veröffentlichen?
  public boolean publishOnFather (String message, String messageID, VS2.UserData uData)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("publishOnFather", true);
                $out.write_string (message);
                $out.write_string (messageID);
                VS2.UserDataHelper.write ($out, uData);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return publishOnFather (message, messageID, uData        );
            } finally {
                _releaseReply ($in);
            }
  } // publishOnFather


  //Nachricht auf Vater veröffentlichen
  public boolean saveMessage (String message, String messageID, VS2.UserData uData)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("saveMessage", true);
                $out.write_string (message);
                $out.write_string (messageID);
                VS2.UserDataHelper.write ($out, uData);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return saveMessage (message, messageID, uData        );
            } finally {
                _releaseReply ($in);
            }
  } // saveMessage


  //Wird beim ausführen von publishOnXXX aufgerufen
  public void notifyFather (VS2.UserData uData)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("notifyFather", true);
                VS2.UserDataHelper.write ($out, uData);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                notifyFather (uData        );
            } finally {
                _releaseReply ($in);
            }
  } // notifyFather


  //gebe dem Vater bescheid das du jetzt ein Kind von ihm bist
  public void saveFatherInformation (int id, String name, VS2.ConnectInformationData ciData, VS2.UserData uData)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("saveFatherInformation", true);
                $out.write_long (id);
                $out.write_string (name);
                VS2.ConnectInformationDataHelper.write ($out, ciData);
                VS2.UserDataHelper.write ($out, uData);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                saveFatherInformation (id, name, ciData, uData        );
            } finally {
                _releaseReply ($in);
            }
  } // saveFatherInformation

  public void notifyChildren (VS2.UserData uData)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("notifyChildren", true);
                VS2.UserDataHelper.write ($out, uData);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                notifyChildren (uData        );
            } finally {
                _releaseReply ($in);
            }
  } // notifyChildren


  //gebe den Kindern bescheid das du jetzt der Vater bist
  public void saveChildInformation (int id, String name, VS2.ConnectInformationData ciData, VS2.UserData uData)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("saveChildInformation", true);
                $out.write_long (id);
                $out.write_string (name);
                VS2.ConnectInformationDataHelper.write ($out, ciData);
                VS2.UserDataHelper.write ($out, uData);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                saveChildInformation (id, name, ciData, uData        );
            } finally {
                _releaseReply ($in);
            }
  } // saveChildInformation


  //Method Calls für SOAP-Server
  public boolean createMessageSoap (String message, String messageID, int serverNr, VS2.UserData uData)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("createMessageSoap", true);
                $out.write_string (message);
                $out.write_string (messageID);
                $out.write_long (serverNr);
                VS2.UserDataHelper.write ($out, uData);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return createMessageSoap (message, messageID, serverNr, uData        );
            } finally {
                _releaseReply ($in);
            }
  } // createMessageSoap

  public boolean modifyMessageSoap (String message, String messageID, int serverNr, VS2.UserData uData)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("modifyMessageSoap", true);
                $out.write_string (message);
                $out.write_string (messageID);
                $out.write_long (serverNr);
                VS2.UserDataHelper.write ($out, uData);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return modifyMessageSoap (message, messageID, serverNr, uData        );
            } finally {
                _releaseReply ($in);
            }
  } // modifyMessageSoap

  public boolean deleteMessageSoap (String messageID, VS2.UserData uData)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("deleteMessageSoap", true);
                $out.write_string (messageID);
                VS2.UserDataHelper.write ($out, uData);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return deleteMessageSoap (messageID, uData        );
            } finally {
                _releaseReply ($in);
            }
  } // deleteMessageSoap

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:VS2/MessageboardServerInterface:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _MessageboardServerInterfaceStub
